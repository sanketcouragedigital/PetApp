apply plugin: 'com.android.library'
apply plugin: 'maven'
apply plugin: 'signing'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.5.0'
    }
}


android {
    compileSdkVersion 23
    buildToolsVersion "22.0.1"

    defaultConfig {
        minSdkVersion 13
        targetSdkVersion 23
    }
}

public class SDPFactory extends DefaultTask {

    @Input
    String unit = "dp"
    @Input
    double max = 300

    @TaskAction
    def create() {
        String resFolder =  project.getProjectDir().getPath() + "/src/main/res/";
        for(double dimen = 300; dimen <= 800 ; dimen = dimen + 30){
            String folder = resFolder + "values-sw" + (int)dimen + "dp";
            String fileName = folder + "/positive_sdps.xml";
            new File(folder).mkdir();
            new File(fileName).createNewFile();
            PrintWriter printWriter = new PrintWriter(fileName);
            printWriter.println("<?xml version=\"1.0\" encoding=\"utf-8\"?>");
            printWriter.println("<resources>");
            for(int i=1; i<=max; i++){
                double ratio = i/300d;
                double sdp = ratio*dimen;
                printWriter.printf("\t<dimen name=\"_%dsdp\">%.2f" + unit + "</dimen>\r\n",i,sdp);
            }
            printWriter.println("</resources>");
            printWriter.close();
        }
        for(double dimen = 300; dimen <= 800; dimen = dimen + 30){
            String folder = resFolder + "values-sw" + (int)dimen + "dp";
            String fileName = folder + "/negative_sdps.xml";
            new File(folder).mkdir();
            new File(fileName).createNewFile();
            PrintWriter printWriter = new PrintWriter(fileName);
            printWriter.println("<?xml version=\"1.0\" encoding=\"utf-8\"?>");
            printWriter.println("<resources>");
            for(int i=1;i<=max;i++){
                double ratio = i/300d;
                double sdp = ratio*dimen;
                printWriter.printf("\t<dimen name=\"_minus%dsdp\">%.2f" + unit + "</dimen>\r\n",i,-sdp);
            }
            printWriter.println("</resources>");
            printWriter.close();
        }
    }
}

task createSDP(type: SDPFactory) {
}

preBuild.dependsOn createSDP

createSDP{
    unit = "dp"//change to "sp" if needed
    max = 300//change to 600 or any other value if needed
}